(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{"/94A":function(e){e.exports=JSON.parse('{"root":["index","setup"],"References":{"Community articles":"/community/articles","API documentation":"https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/index.html","Release notes":"/release-notes"},"Server":["server-basics","server-decorator","server-grpc","server-thrift","server-docservice","server-annotated-service","server-http-file","server-servlet","server-access-log","server-cors","server-sse"],"Client":["client-http","client-thrift","client-grpc","client-decorator","client-retrofit","client-custom-http-headers","client-timeouts","client-retry","client-circuit-breaker","client-service-discovery"],"Advanced":["advanced-logging","advanced-structured-logging","advanced-custom-attributes","advanced-structured-logging-kafka","advanced-unit-testing","advanced-production-checklist","advanced-zipkin","advanced-zookeeper","advanced-saml","advanced-spring-webflux-integration","advanced-dropwizard-integration"]}')},AMUl:function(e){e.exports=JSON.parse('{"data":{"allMdx":{"nodes":[{"tableOfContents":{"items":[{"url":"#requestcontext-custom-attributes","title":"RequestContext custom attributes"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"advanced-custom-attributes"}},{"tableOfContents":{"items":[{"url":"#using-armeria-with-dropwizard","title":"Using Armeria with Dropwizard"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"advanced-dropwizard-integration"}},{"tableOfContents":{"items":[{"url":"#production-checklist","title":"Production checklist"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"advanced-production-checklist"}},{"tableOfContents":{"items":[{"url":"#logging-contextual-information","title":"Logging contextual information"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"advanced-logging"}},{"tableOfContents":{"items":[{"url":"#saml-single-sign-on","title":"SAML Single Sign-On"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"advanced-saml"}},{"tableOfContents":{"items":[{"url":"#using-armeria-with-spring-webflux","title":"Using Armeria with Spring WebFlux"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"advanced-spring-webflux-integration"}},{"tableOfContents":{"items":[{"url":"#structured-logging","title":"Structured logging"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"advanced-structured-logging"}},{"tableOfContents":{"items":[{"url":"#unit-testing-client-and-service","title":"Unit-testing Client and Service"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"advanced-unit-testing"}},{"tableOfContents":{"items":[{"url":"#zipkin-integration","title":"Zipkin integration"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"advanced-zipkin"}},{"tableOfContents":{"items":[{"url":"#service-discovery-with-zookeeper","title":"Service discovery with ZooKeeper"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"advanced-zookeeper"}},{"tableOfContents":{"items":[{"url":"#structured-logging-with-kafka","title":"Structured logging with Kafka"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"advanced-structured-logging-kafka"}},{"tableOfContents":{"items":[{"url":"#sending-custom-http-headers","title":"Sending custom HTTP headers"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"client-custom-http-headers"}},{"tableOfContents":{"items":[{"url":"#decorating-a-client","title":"Decorating a client"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"client-decorator"}},{"tableOfContents":{"items":[{"url":"#circuit-breaker","title":"Circuit breaker"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"client-circuit-breaker"}},{"tableOfContents":{"items":[{"url":"#calling-a-grpc-service","title":"Calling a gRPC service"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"client-grpc"}},{"tableOfContents":{"items":[{"url":"#retrofit-integration","title":"Retrofit integration"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"client-retrofit"}},{"tableOfContents":{"items":[{"url":"#calling-an-http-service","title":"Calling an HTTP service"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"client-http"}},{"tableOfContents":{"items":[{"url":"#automatic-retry","title":"Automatic retry"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"client-retry"}},{"tableOfContents":{"items":[{"url":"#client-side-load-balancing-and-service-discovery","title":"Client-side load balancing and service discovery"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"client-service-discovery"}},{"tableOfContents":{"items":[{"url":"#calling-a-thrift-service","title":"Calling a Thrift service"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"client-thrift"}},{"tableOfContents":{"items":[{"url":"#overriding-client-timeouts","title":"Overriding client timeouts"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"client-timeouts"}},{"tableOfContents":{"items":[{"url":"#writing-an-access-log","title":"Writing an access log"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"server-access-log"}},{"tableOfContents":{"items":[{"url":"#user-manual","title":"User manual"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"index"}},{"tableOfContents":{"items":[{"url":"#annotated-services","title":"Annotated services"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"server-annotated-service"}},{"tableOfContents":{"items":[{"url":"#server-basics","title":"Server basics"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"server-basics"}},{"tableOfContents":{"items":[{"url":"#configuring-cors","title":"Configuring CORS"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"server-cors"}},{"tableOfContents":{"items":[{"url":"#decorating-a-service","title":"Decorating a service"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"server-decorator"}},{"tableOfContents":{"items":[{"url":"#browsing-and-invoking-services-with-docservice","title":"Browsing and invoking services with DocService"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"server-docservice"}},{"tableOfContents":{"items":[{"url":"#running-a-grpc-service","title":"Running a gRPC service"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"server-grpc"}},{"tableOfContents":{"items":[{"url":"#serving-static-files","title":"Serving static files"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"server-http-file"}},{"tableOfContents":{"items":[{"url":"#embedding-a-servlet-container","title":"Embedding a servlet container"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"server-servlet"}},{"tableOfContents":{"items":[{"url":"#serving-server-sent-events","title":"Serving Server-Sent Events"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"server-sse"}},{"tableOfContents":{"items":[{"url":"#running-a-thrift-service","title":"Running a Thrift service"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"server-thrift"}},{"tableOfContents":{"items":[{"url":"#setting-up-a-project","title":"Setting up a project"}]},"parent":{"__typename":"File","sourceInstanceName":"docs","name":"setup"}}]}}}')},LO0G:function(e,t,n){"use strict";n.r(t),n.d(t,"pageTitle",(function(){return i})),n.d(t,"_frontmatter",(function(){return c})),n.d(t,"default",(function(){return d}));n("8x/H"),n("UsjJ"),n("tKM+"),n("q1tI");var r=n("7ljp"),a=n("xCMr");var i="Production checklist",c={},s=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(r.b)("div",t)}},o=s("Warning"),l=s("Tip"),m={pageTitle:i,_frontmatter:c},p=a.a;function d(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,["components"]);return Object(r.b)(p,Object.assign({},m,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"production-checklist",style:{position:"relative"}},Object(r.b)("a",Object.assign({parentName:"h1"},{href:"#production-checklist","aria-label":"production checklist permalink",className:"anchor before"}),Object(r.b)("svg",Object.assign({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(r.b)("path",Object.assign({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"})))),"Production checklist"),Object(r.b)(o,{mdxType:"Warning"},Object(r.b)("p",null,"Note that the advices in this page are not always applicable for every use case and thus should be\napplied with caution. Do not apply the changes you really do not need.")),Object(r.b)("p",null,"You may want to consider the following options before putting your Armeria application into production."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Specify the maximum number of accepted connections. The default is ",Object(r.b)("em",{parentName:"p"},"unbounded"),"."),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-java"}),"import com.linecorp.armeria.server.Server;\nimport com.linecorp.armeria.server.ServerBuilder;\n\nServerBuilder sb = Server.builder();\nsb.maxNumConnections(500);\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Specify an alternative ",Object(r.b)("inlineCode",{parentName:"p"},"blockingTaskExecutor")," based on expected workload if your server has\na service that uses it, such as ",Object(r.b)("a",Object.assign({parentName:"p"},{href:"type://TomcatService:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/tomcat/TomcatService.html"}),"type://TomcatService"),", ",Object(r.b)("a",Object.assign({parentName:"p"},{href:"type://JettyService:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/jetty/JettyService.html"}),"type://JettyService")," and ",Object(r.b)("a",Object.assign({parentName:"p"},{href:"type://THttpService:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/thrift/THttpService.html"}),"type://THttpService")," with\nsynchronous service implementation. The default is a simple ",Object(r.b)("inlineCode",{parentName:"p"},"ScheduledThreadPoolExecutor")," with maximum\n200 threads, provided by ",Object(r.b)("a",Object.assign({parentName:"p"},{href:"type://CommonPools:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/CommonPools.html"}),"type://CommonPools"),"."),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-java"}),"import com.linecorp.armeria.server.ServerBuilder;\n\nServerBuilder sb = Server.builder();\nsb.blockingTaskExecutor(myScheduledExecutorService);\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Specify the default limits of an HTTP request or response."),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-java"}),"import java.time.Duration;\nimport com.linecorp.armeria.client.ClientBuilder;\nimport com.linecorp.armeria.server.ServerBuilder;\n\n// Server-side\nServerBuilder sb = Server.builder();\nsb.maxRequestLength(1048576); // bytes (default: 10 MiB)\nsb.requestTimeout(Duration.ofSeconds(7)); // (default: 10 seconds)\n\n// Client-side\nClientBuilder cb = Clients.builder(...); // or WebClient.builder(...)\ncb.maxResponseLength(1048576); // bytes (default: 10 MiB)\ncb.responseTimeout(Duration.ofSeconds(10)); // (default: 15 seconds)\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Decorate your services with ",Object(r.b)("a",Object.assign({parentName:"p"},{href:"type://ThrottlingService:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/throttling/ThrottlingService.html"}),"type://ThrottlingService")," which lets you fail the incoming requests based on a\npolicy, such as 'fail if the rate of requests exceed a certain threshold."),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-java"}),'import com.linecorp.armeria.server.throttling.RateLimitingThrottlingStrategy;\nimport com.linecorp.armeria.server.throttling.ThrottlingService;\n\nServerBuilder sb = Server.builder();\nsb.service("/my_service", // Allow up to 1000 requests/sec.\n           myService.decorate(ThrottlingService.newDecorator(\n                   new RateLimitingThrottlingStrategy(1000.0))));\n'))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Decorate your clients with ",Object(r.b)("a",Object.assign({parentName:"p"},{href:"type://RetryingClient:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/client/retry/RetryingClient.html"}),"type://RetryingClient"),". See ",Object(r.b)("a",Object.assign({parentName:"p"},{href:"/docs/client-retry#automatic-retry"}),"Automatic retry"),".")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Decorate your clients with ",Object(r.b)("a",Object.assign({parentName:"p"},{href:"type://CircuitBreakerClient:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/client/circuitbreaker/CircuitBreakerClient.html"}),"type://CircuitBreakerClient"),". See ",Object(r.b)("a",Object.assign({parentName:"p"},{href:"/docs/client-circuit-breaker"}),"Circuit breaker"),"."))),Object(r.b)(l,{mdxType:"Tip"},Object(r.b)("p",null,"You can use Armeria's ",Object(r.b)("a",Object.assign({parentName:"p"},{href:"type://CircuitBreaker:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/client/circuitbreaker/CircuitBreaker.html"}),"type://CircuitBreaker")," API for non-Armeria clients without circuit breaker support.\nSee ",Object(r.b)("a",Object.assign({parentName:"p"},{href:"/docs/client-circuit-breaker#using-circuitbreaker-with-non-armeria-client"}),"Using CircuitBreaker with non-Armeria client"),".")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Tune the socket options."),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-java"}),"import com.linecorp.armeria.client.ClientBuilder;\nimport com.linecorp.armeria.client.ClientFactory;\nimport com.linecorp.armeria.client.ClientFactoryBuilder;\nimport com.linecorp.armeria.server.ServerBuilder;\nimport io.netty.channel.ChannelOption;\n\n// Server-side\nServerBuilder sb = Server.builder();\nsb.channelOption(ChannelOption.SO_BACKLOG, ...);\nsb.channelOption(ChannelOption.SO_REUSEADDR, ...);\nsb.childChannelOption(ChannelOption.SO_SNDBUF, ...);\nsb.childChannelOption(ChannelOption.SO_RCVBUF, ...);\n\n// Client-side\nClientFactoryBuilder cfb = new ClientFactoryBuilder();\ncfb.channelOption(ChannelOption.SO_REUSEADDR, ...);\ncfb.channelOption(ChannelOption.SO_SNDBUF, ...);\ncfb.channelOption(ChannelOption.SO_RCVBUF, ...);\nClientFactory cf = cfb.build();\nClientBuilder cb = Clients.builder(...);\ncb.factory(cf);\n")))))}d.isMDXComponent=!0},xCMr:function(e,t,n){"use strict";n("UsjJ");var r=n("AMUl"),a=n("q1tI"),i=n.n(a),c=n("/94A"),s=n("+ejy");t.a=function(e){var t=r.data.allMdx.nodes;return i.a.createElement(s.a,Object.assign({},e,{candidateMdxNodes:t,index:c,prefix:"docs",pageTitleSuffix:"Armeria documentation"}))}}}]);
//# sourceMappingURL=component---src-pages-docs-advanced-production-checklist-mdx-c2af5c6c711646470ddc.js.map